package com.example.study_kotlin2.ChapterMemo;

/*
Chapter 17
지역화
지역화란?
사용자의 언어 설정을 기반으로 앱의 적합한 리소스를 제공하는 절차다.
장치의 언어가 스페인어로 설정되면 런타임 시에 안드로이드가 스페인어 문자열을 자동으로 찾아 사용한다.

리소스 지역화하기
- res/values -> 새로운 Resource 파일 만들어주기(strings) -> 사용 가능한 수식자(Available qualifiers)에서 Locale 선택 -> 수식자 언어 목록에서 원하는 언어 선택
- 이 때 strings 파일은 각각 대조되어야 한다.

기본 리소스
- 영어의 언어 구성 수식자는 -en이다.(한국어는 -kr)
- 따라서 기존의 values 디렉터리 이름을 values-en으로 변경해도 된다고 생각할 수 있다. 하지만 그렇게 변경하면 이 앱은 values-en의 strings.xml과 values-es의 strings.xml을 가진다.
- 이렇게 하면 앱을 빌드하고 스페인어나 영어로 언어가 설정된 장치가 아닌 앱에서 문제가 생길 수 있다.
- Resource.NotFoundException이 발생하면서 문자열 리소스를 찾을 수 없게 된다.
= 따라서 앱에 각 리소스의 기본 리소스를 제공한다.

번역 편집기로 문자열 리소스 확인하기
- 앱에서 지원할 언어가 많아질수록 각 언어의 문자열 리소스를 따로 제공하는 것도 어려워진다.
- 모든 번역 문자열을 한곳에서 볼 수 있게 안드로이드 스튜디오에서 간편한 번역 편집기(Translation editor)를 제공한다.
- strings.xml -> 오른쪽 클릭 -> Open Translation Editor에서 한 눈에 문자열을 볼 수 있다.

로케일과 리소스 선택
- 리소스 디렉터리는 언어 로케일(locale)에 지역(region)을 추가해 수식자로 지정할 수 있다.

구성 수식자
- 지금까지 대체 리소스를 제공하는 몇몇 구성 수식자를 사용하였다.(언어관련 - values-es, 장치회전에 따른 화면 방향 관련 - layout-land, 화면 밀도 관련 - drawable-mdpi 등)
- 리소스를 대상으로 안드로이드 시스템에서 제공하는 장치 구성 수식자는 다음과 같다.
1. 모바일 국가 코드(MCC), 그 다음에 선택적으로 모바일 네트워크 코드(MNC)가 붙음
2. 언어 코드, 그 다음에 선택적으로 지역 코드가 붙음
3. 레이아웃 방향
4. 최소 너비
5. 사용 가능 너비
6. 사용 가능 높이
7. 화면 크기
8. 화면 비율
9. 원형 화면 여부(API 레벨 23 이상)
10. 확장 색 공간
11. 높은 명암비
12. 화면 방향
13. UI 모드
14. 야간 모드
15. 화면 밀도(dpi)
16. 터치 스크린 유형
17. 키보드 사용성
18 기본 텍스트 입력 방법
19. 네비게이션 키 사용성
20. 기본 비-터치 네비게이션 방법
21. API 레벨

대체 리소스의 우선순위 부여
- 하나의 리소스에 대해 여러 유형의 대체 구성 수식자들이 지정되어 있으면, 장치 구성과 일치하는 대체 리소스들이 하나 이상이 될 수 있다.
- 이 때는 앞의 21가지 구성 수식자 내역에 있는 우선순위에 따라 대체 리소스가 선택된다.(작은 번호가 우선순위가 높음)

복합 수식자
- 하나의 리소스 디렉터리 이름에 여러 유형의 수식자를 같이 사용할 수 있다.
- 단 이 때는 우선순위가 높은 것부터 사용해야 한다. (따라서 values-es-w600dp는 적합하지만 values-w600dp-es는 적합하지 않다.)
 */